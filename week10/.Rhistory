geom_point(binnedTimeCavities,mapping=aes(x=TimepointBins,y=binnedAverageCavityArea)) +
geom_errorbar(binnedTimeCavities,mapping=aes(x=TimepointBins,y=binnedAverageCavityArea,ymin=binnedAverageCavityArea-binnedSdCavityArea,ymax=binnedAverageCavityArea+binnedSdCavityArea),width = 0.2) +
facet_grid2(BindingRate~factor(HexamerStrength,levels=c('-7.62kBT','-9.62kBT','-11.62kBT')),scales = "free_y",independent = "y") +
theme_base(base_size = 1) +
labs(color="Coverage Percentage",
x="Timepoint Bin",
y="Average of Average Cavity Area (In Hexamer Areas)") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ggtitle("Cavity Area by Hexamer Strength\nTimepoint Bin and Binding Speed")
cavityScatter
# Pull out an individual timepoint to examine cavities.
# Pull out an individual timepoint to examine cavities.
#cavitiesofinterest <- relabeled_cavities %>% filter(HexamerStrength == '-7.62kBT') %>% filter(BindingRate == '1.5/uMS') %>% filter(TraceID == '1') %>% filter(Timepoint == '38850000')
# Pull out an individual timepoint to examine cavities.
#cavitiesofinterest <- relabeled_cavities %>% filter(HexamerStrength == '-7.62kBT') %>% filter(BindingRate == '1.5/uMS') %>% filter(TraceID == '1') %>% filter(Timepoint == '38850000')
# Pull out an individual timepoint to examine cavities.
#cavitiesofinterest <- relabeled_cavities %>% filter(HexamerStrength == '-7.62kBT') %>% filter(BindingRate == '1.5/uMS') %>% filter(TraceID == '1') %>% filter(Timepoint == '38850000')
labeledCavityBox
# Pull out an individual timepoint to examine cavities.
cavitiesofinterest <- relabeled_cavities %>% filter(HexamerStrength == '-7.62kBT') %>% filter(BindingRate == '1.5/uMS') %>% filter(TraceID == '1') %>% filter(Timepoint == '38850000')
View(cavitiesofinterest)
# Establish Environment
library(tidyverse)
library(ggthemes)
library(ggh4x)
library(cowplot)
# Functions for Plotting Equations on GGplot
lm_eqn <- function(df, x_col, y_col) {
m <- lm(as.formula(paste(y_col, "~", x_col)), data = df)
a <- format(coef(m)[1], digits = 4)
b <- format(coef(m)[2], digits = 4)
r2 <- format(summary(m)$r.squared, digits = 4)
eq <- paste0("italic(y) == ", a, " + ", b, " * italic(x) * ",
"~~ italic(r)^2 ~ '=' ~ ", r2)
as.character(as.expression(eq))
}
# Add Nice Titles to Graphs
draw_label_theme <- function(label, theme = NULL, element = "text", ...) {
if (is.null(theme)) {
theme <- ggplot2::theme_get()
}
if (!element %in% names(theme)) {
stop("Element must be a valid ggplot theme element name")
}
elements <- ggplot2::calc_element(element, theme)
cowplot::draw_label(label,
fontfamily = elements$family,
fontface = elements$face,
colour = elements$color,
size = elements$size,
...
)
}
# Import Data
cavity_area <- read.csv("~/OneDrive - Johns Hopkins/GAG Strucutre/RemodelingSim/AllCavities.txt",colClasses = c("numeric","numeric","numeric","numeric","character","character","character","numeric"))
d25n_cavity_area <- read.csv("~/OneDrive - Johns Hopkins/GAG Strucutre/RemodelingSim/Re_ Experimental Cavity Area/d25n_scaled_detail.txt",colClasses = c("character","numeric","numeric","numeric","numeric","numeric","numeric"))
hGag_cavity_area <- read.csv("~/OneDrive - Johns Hopkins/GAG Strucutre/RemodelingSim/Re_ Experimental Cavity Area/hGag_scaled_detail.txt",colClasses = c("character","numeric","numeric","numeric","numeric","numeric","numeric"))
# Remove 562kBT Hexamers, as they consist of multiple islands that don't closely model actual hexamer assembly
cavity_area <- filter(cavity_area,HexamerStrength != 562)
# Convert Binding Rate and Hexamer Strength to Factors for visualization purposes
cavity_area <- cavity_area %>% mutate_at(vars(BindingRate),funs(factor(., levels=unique(.))))
cavity_area <- cavity_area %>% mutate_at(vars(HexamerStrength),funs(factor(., levels=unique(.))))
# Filter by Hexamer Strength, Binding Rate, Trace ID, and Timepoint, then removes the open border of the sphere
cavity_area <- cavity_area %>% group_by(HexamerStrength,BindingRate,TraceID,Timepoint) %>% filter(CavityAreaHexamers != max(CavityAreaHexamers))
# Remove the open border for experimental datasets
d25n_cavity_area <- d25n_cavity_area %>% group_by(VLPNumber) %>% filter(HexamerCavityArea != max(HexamerCavityArea))
hGag_cavity_area <- hGag_cavity_area %>% group_by(VLPNumber) %>% filter(HexamerCavityArea != max(HexamerCavityArea))
# Combine Experimental Datasets into a Single Data Frame and Restructure to Merge with Simulation Data
d25n_cavity_area <- d25n_cavity_area %>% mutate(Condition = "d25n")
hGag_cavity_area <- hGag_cavity_area %>% mutate(Condition = "hGag")
experimental_cavity_area <- bind_rows(d25n_cavity_area,hGag_cavity_area)
experimental_cavity_area <- rename(experimental_cavity_area,c(SurfaceAreaCADomain = 'SurfaceArea', Coverage = 'PercentCoverage', CavityAreaAngstroms = 'CavityArea', CavityAreaHexamers = 'HexamerCavityArea'))
experimental_cavity_area <- experimental_cavity_area %>% select(-c(Hexamers,CavityPerimeter))
experimental_cavity_area <- experimental_cavity_area %>% relocate(VLPNumber,.after = Condition)
# Filter for cavities with an area that is at least equal to the area of half of a hexamer, as the experimental data only has sufficient resolution to view hexamers with 3 or more subunits.
cavity_area <- cavity_area %>% filter(CavityAreaHexamers >= 0.50)
experimental_cavity_area <- experimental_cavity_area %>% filter(CavityAreaHexamers >= 0.50)
#Bin data by Timepoints
finalTimes <- cavity_area %>% group_by(HexamerStrength,BindingRate,TraceID) %>% summarize(maxTimepoint = max(Timepoint))
timepointed_cavities <- cavity_area %>% left_join(y=finalTimes, by=c("HexamerStrength","BindingRate","TraceID"))
timepointed_cavities <- timepointed_cavities %>% rowwise() %>% mutate(TimepointBins = cut(Timepoint,breaks=c(0,0.1*maxTimepoint,0.2*maxTimepoint,0.3*maxTimepoint,0.4*maxTimepoint,0.5*maxTimepoint,0.6*maxTimepoint,0.7*maxTimepoint,0.8*maxTimepoint,0.9*maxTimepoint,maxTimepoint),labels=c('First Tenth','Second Tenth','Third Tenth','Fourth Tenth', 'Fifth Tenth', 'Sixth Tenth', 'Seventh Tenth', 'Eighth Tenth', 'Ninth Tenth', 'Tenth Tenth')))
# Relabel Facets
relabeled_cavities <- timepointed_cavities
levels(relabeled_cavities$HexamerStrength) <- c('-11.62kBT','-7.62kBT','-9.62kBT')
levels(relabeled_cavities$BindingRate) <- c('0.015/uMS','0.15/uMS','1.5/uMS')
#Relabel Experimental Facets
relabeled_experimental_cavity_area <- experimental_cavity_area
relabeled_experimental_cavity_area$Condition <- relabeled_experimental_cavity_area$Condition %>% factor(levels = c('d25n','hGag'),labels=c('Packaging Viral RNA','Packaging Cellular RNA'))
# Establish Environment
library(tidyverse)
library(ggthemes)
library(ggh4x)
library(cowplot)
# Functions for Plotting Equations on GGplot
lm_eqn <- function(df, x_col, y_col) {
m <- lm(as.formula(paste(y_col, "~", x_col)), data = df)
a <- format(coef(m)[1], digits = 4)
b <- format(coef(m)[2], digits = 4)
r2 <- format(summary(m)$r.squared, digits = 4)
eq <- paste0("italic(y) == ", a, " + ", b, " * italic(x) * ",
"~~ italic(r)^2 ~ '=' ~ ", r2)
as.character(as.expression(eq))
}
# Add Nice Titles to Graphs
draw_label_theme <- function(label, theme = NULL, element = "text", ...) {
if (is.null(theme)) {
theme <- ggplot2::theme_get()
}
if (!element %in% names(theme)) {
stop("Element must be a valid ggplot theme element name")
}
elements <- ggplot2::calc_element(element, theme)
cowplot::draw_label(label,
fontfamily = elements$family,
fontface = elements$face,
colour = elements$color,
size = elements$size,
...
)
}
# Import Data
cavity_area <- read.csv("~/OneDrive - Johns Hopkins/GAG Strucutre/RemodelingSim/AllCavities.txt",colClasses = c("numeric","numeric","numeric","numeric","character","character","character","numeric"))
d25n_cavity_area <- read.csv("~/OneDrive - Johns Hopkins/GAG Strucutre/RemodelingSim/Re_ Experimental Cavity Area/d25n_scaled_detail.txt",colClasses = c("character","numeric","numeric","numeric","numeric","numeric","numeric"))
hGag_cavity_area <- read.csv("~/OneDrive - Johns Hopkins/GAG Strucutre/RemodelingSim/Re_ Experimental Cavity Area/hGag_scaled_detail.txt",colClasses = c("character","numeric","numeric","numeric","numeric","numeric","numeric"))
# Remove 562kBT Hexamers, as they consist of multiple islands that don't closely model actual hexamer assembly
cavity_area <- filter(cavity_area,HexamerStrength != 562)
# Convert Binding Rate and Hexamer Strength to Factors for visualization purposes
cavity_area <- cavity_area %>% mutate_at(vars(BindingRate),funs(factor(., levels=unique(.))))
cavity_area <- cavity_area %>% mutate_at(vars(HexamerStrength),funs(factor(., levels=unique(.))))
# Filter by Hexamer Strength, Binding Rate, Trace ID, and Timepoint, then removes the open border of the sphere
cavity_area <- cavity_area %>% group_by(HexamerStrength,BindingRate,TraceID,Timepoint) %>% filter(CavityAreaHexamers != max(CavityAreaHexamers))
# Remove the open border for experimental datasets
d25n_cavity_area <- d25n_cavity_area %>% group_by(VLPNumber) %>% filter(HexamerCavityArea != max(HexamerCavityArea))
hGag_cavity_area <- hGag_cavity_area %>% group_by(VLPNumber) %>% filter(HexamerCavityArea != max(HexamerCavityArea))
# Combine Experimental Datasets into a Single Data Frame and Restructure to Merge with Simulation Data
d25n_cavity_area <- d25n_cavity_area %>% mutate(Condition = "d25n")
hGag_cavity_area <- hGag_cavity_area %>% mutate(Condition = "hGag")
experimental_cavity_area <- bind_rows(d25n_cavity_area,hGag_cavity_area)
experimental_cavity_area <- rename(experimental_cavity_area,c(SurfaceAreaCADomain = 'SurfaceArea', Coverage = 'PercentCoverage', CavityAreaAngstroms = 'CavityArea', CavityAreaHexamers = 'HexamerCavityArea'))
experimental_cavity_area <- experimental_cavity_area %>% select(-c(Hexamers,CavityPerimeter))
experimental_cavity_area <- experimental_cavity_area %>% relocate(VLPNumber,.after = Condition)
# Filter for cavities with an area that is at least equal to the area of half of a hexamer, as the experimental data only has sufficient resolution to view hexamers with 3 or more subunits.
cavity_area <- cavity_area %>% filter(CavityAreaHexamers >= 1)
experimental_cavity_area <- experimental_cavity_area %>% filter(CavityAreaHexamers >= 1)
#Bin data by Timepoints
finalTimes <- cavity_area %>% group_by(HexamerStrength,BindingRate,TraceID) %>% summarize(maxTimepoint = max(Timepoint))
timepointed_cavities <- cavity_area %>% left_join(y=finalTimes, by=c("HexamerStrength","BindingRate","TraceID"))
timepointed_cavities <- timepointed_cavities %>% rowwise() %>% mutate(TimepointBins = cut(Timepoint,breaks=c(0,0.1*maxTimepoint,0.2*maxTimepoint,0.3*maxTimepoint,0.4*maxTimepoint,0.5*maxTimepoint,0.6*maxTimepoint,0.7*maxTimepoint,0.8*maxTimepoint,0.9*maxTimepoint,maxTimepoint),labels=c('First Tenth','Second Tenth','Third Tenth','Fourth Tenth', 'Fifth Tenth', 'Sixth Tenth', 'Seventh Tenth', 'Eighth Tenth', 'Ninth Tenth', 'Tenth Tenth')))
# Relabel Facets
relabeled_cavities <- timepointed_cavities
levels(relabeled_cavities$HexamerStrength) <- c('-11.62kBT','-7.62kBT','-9.62kBT')
levels(relabeled_cavities$BindingRate) <- c('0.015/uMS','0.15/uMS','1.5/uMS')
#Relabel Experimental Facets
relabeled_experimental_cavity_area <- experimental_cavity_area
relabeled_experimental_cavity_area$Condition <- relabeled_experimental_cavity_area$Condition %>% factor(levels = c('d25n','hGag'),labels=c('Packaging Viral RNA','Packaging Cellular RNA'))
# Visualize Cavities
LimitedCavityBox <- ggplot() +
geom_boxplot(relabeled_cavities %>% filter(HexamerStrength == '-7.62kBT'),mapping = aes(x=CavityAreaHexamers,y=BindingRate),
position="identity",width=1/length(unique(relabeled_cavities$BindingRate))) +
theme_base(base_size = 15) +
labs(title="Reaction Diffusion\nSimulation",
x="Area of Cavity (In Hexamer Areas)",
y="Binding Rate") +
scale_y_discrete(limits=rev) +
theme(plot.title = element_text(hjust = 0.5)) +
xlim(0,100) +
coord_flip()+
scale_color_colorblind()
LimitedCavityBox
SimulatedCavityBox <- ggplot() +
geom_boxplot(relabeled_cavities,mapping = aes(x=CavityAreaHexamers,y=BindingRate),
position="identity",width=0.75) +
facet_grid(.~factor(HexamerStrength,levels=c('-7.62kBT','-9.62kBT','-11.62kBT'))) +
theme_base(base_size = 15) +
labs(title="Reaction Diffusion\nSimulation",
x="Area of Cavity (In Hexamer Areas)",
y="Binding Rate") +
scale_y_discrete(limits=rev) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
theme(plot.title = element_text(hjust = 0.5)) +
xlim(0,100) +
coord_flip()+
scale_color_colorblind()
SimulatedCavityBox
ExperimentalCavityBox <- ggplot() +
geom_boxplot(relabeled_experimental_cavity_area,mapping = aes(x=CavityAreaHexamers,y=0),
position="identity",width=1/length(unique(relabeled_cavities$BindingRate))) +
ylim(-1,1) +
facet_grid(.~factor(Condition,levels=c('Packaging Cellular RNA','Packaging Viral RNA'),labels = c('Packaging\nCellular RNA','Packaging\nViral RNA'))) +
theme_base(base_size = 15) +
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank()) +
labs(title="Electron Tomography\nReconstruction",
x="Area of Cavity (In Hexamer Areas)") +
theme(plot.title = element_text(hjust = 0.5)) +
xlim(0,100) +
coord_flip()+
scale_color_colorblind()
ExperimentalCavityBox
title_gg <- ggdraw() +
draw_label_theme("Gag Lattice Cavity Areas",theme = theme_base(),element = "plot.title",x = 0.5, hjust = 0.5, vjust = 1) +
theme(plot.background = element_rect(fill="#FFFFFF", color = NA))
combinedCavityBox <- cowplot::plot_grid(SimulatedCavityBox,ExperimentalCavityBox,align="h")
combinedCavityBox
#ggsave("~/OneDrive - Johns Hopkins/GAG Strucutre/RemodelingSim/Experimental_and_Simulated_Gag_Lattice_Cavities.png",combinedCavityBox)
labeledCavityBox <- cowplot::plot_grid(title_gg,combinedCavityBox,ncol=1,rel_heights=c(0.15,1))
labeledCavityBox
combinedCavityBox
# Pull out an individual timepoint to examine cavities.
cavitiesofinterest <- relabeled_cavities %>% filter(HexamerStrength == '-7.62kBT') %>% filter(BindingRate == '1.5/uMS') %>% filter(TraceID == '1') %>% filter(Timepoint == '38850000')
hgagcavity = experimental_cavity_area %>% filter(Condition == 'hGag')
View(hgagcavity)
hgagcavity = experimental_cavity_area %>% filter(Condition == 'hGag') %>% filter(VLPNumber == '0')
View(hgagcavity)
hgagcavity = experimental_cavity_area %>% filter(Condition == 'd25n') %>% filter(VLPNumber == '0')
hgagcavity = experimental_cavity_area %>% filter(Condition == 'd25n') %>% filter(VLPNumber == '1')
hgagcavity = experimental_cavity_area %>% filter(Condition == 'd25n') %>% filter(VLPNumber == '2')
# Establish Environment
library(tidyverse)
library(ggthemes)
#Set Seed for Randomization
set.seed(42)
#Import Data
cavity_area <- read.csv("~/OneDrive - Johns Hopkins/GAG Strucutre/CSV Data for Analysis : Sharing//20240916_CavityvsCoverage.csv")
#Bin Data into the percentage coverage groups
binned <- cavity_area %>%
mutate(binned_coverage = cut(Percent.Coverage,
breaks=c(0.15, 0.30, 0.45, 0.60,0.75,1),
labels = c('17%','33%','50%','67%','84%')))
#Filter for cavities with an area that is at least equal to the area of half of a hexamer, as the experimental data only has sufficient resolution to view hexamers with 3 or more subunits.
filteredbyHexamer <-binned %>% filter(Cavity.Area >= 0.50)
coverage17 <- filteredbyHexamer %>% filter(binned_coverage == '17%')
coverage33 <- filteredbyHexamer %>% filter(binned_coverage == '33%')
coverage50 <- filteredbyHexamer %>% filter(binned_coverage == '50%')
coverage67 <- filteredbyHexamer %>% filter(binned_coverage == '67%')
coverage84 <- filteredbyHexamer %>% filter(binned_coverage == '84%')
#Visualize Data
cavityBox <- ggplot() +
geom_boxplot(filteredbyHexamer,mapping = aes(x=Cavity.Area,y=binned_coverage),
position="identity") + #Plots boxplots of cavity area
labs(color="Coverage Percentage",
x="Area of Cavity (In Hexamer Areas)",
y="Percent Coverage") +
ggtitle("Cavity Area by Percent Coverage") +
coord_flip()+
scale_color_colorblind()
pdf <- ggplot() +
geom_density(filteredbyHexamer,mapping = aes(x=Cavity.Area, ..scaled..,
color=binned_coverage),
position="identity") + #Plots pdf
labs(color="Coverage Percentage",
x="Area of Cavity (In Hexamer Areas)",
y="Density") +
ggtitle("Cavity Area by Percent Coverage") +
scale_color_colorblind()
cdf <- ggplot(filteredbyHexamer) +
stat_ecdf(aes(x=Cavity.Area,
color=binned_coverage),
position="identity") + #Plots cdf
labs(color="Coverage Percentage",
x="Area of Cavity (In Hexamer Areas)",
y="Density") +
ggtitle("Cavity Area by Percent Coverage") +
scale_color_colorblind()
cavityBox
pdf
cdf
import tidyverse
library(tidyverse)
prices = c(5,50,5,50,25,1,2,50,25,0.1,25,25,25,2,25,10,25,25,25,10,25,5,1,0.2,25,1,10,5,25,3,0.5,2,1,5,10,10,15,50,200,10,0.1,2,0.2,5,5,5,5,2,25,10,20,0.1,15,15,25,5,25,25,10,15,15,40,45,55,50,100,150,200,50,100,150,200,50,100,150,200,50,100,150,200,0.2,0.5,5,10,0.5,1,0.5)
ggplot(prices) +
stat_ecdf()
prices = tibble(5,50,5,50,25,1,2,50,25,0.1,25,25,25,2,25,10,25,25,25,10,25,5,1,0.2,25,1,10,5,25,3,0.5,2,1,5,10,10,15,50,200,10,0.1,2,0.2,5,5,5,5,2,25,10,20,0.1,15,15,25,5,25,25,10,15,15,40,45,55,50,100,150,200,50,100,150,200,50,100,150,200,50,100,150,200,0.2,0.5,5,10,0.5,1,0.5)
prices = tibble_row(...,.price=c(5,50,5,50,25,1,2,50,25,0.1,25,25,25,2,25,10,25,25,25,10,25,5,1,0.2,25,1,10,5,25,3,0.5,2,1,5,10,10,15,50,200,10,0.1,2,0.2,5,5,5,5,2,25,10,20,0.1,15,15,25,5,25,25,10,15,15,40,45,55,50,100,150,200,50,100,150,200,50,100,150,200,50,100,150,200,0.2,0.5,5,10,0.5,1,0.5))
prices = tibble_row(.price=c(5,50,5,50,25,1,2,50,25,0.1,25,25,25,2,25,10,25,25,25,10,25,5,1,0.2,25,1,10,5,25,3,0.5,2,1,5,10,10,15,50,200,10,0.1,2,0.2,5,5,5,5,2,25,10,20,0.1,15,15,25,5,25,25,10,15,15,40,45,55,50,100,150,200,50,100,150,200,50,100,150,200,50,100,150,200,0.2,0.5,5,10,0.5,1,0.5))
prices = tibble(.price=c(5,50,5,50,25,1,2,50,25,0.1,25,25,25,2,25,10,25,25,25,10,25,5,1,0.2,25,1,10,5,25,3,0.5,2,1,5,10,10,15,50,200,10,0.1,2,0.2,5,5,5,5,2,25,10,20,0.1,15,15,25,5,25,25,10,15,15,40,45,55,50,100,150,200,50,100,150,200,50,100,150,200,50,100,150,200,0.2,0.5,5,10,0.5,1,0.5))
View(prices)
ggplot(prices) +
stat_ecdf()
ggplot(prices) +
stat_ecdf(aes(x=.price))
ggplot(prices) +
stat_ecdf(aes(x=.price)) +
geom_line(aes(y=0.5))
ggplot(prices) +
stat_ecdf(aes(x=.price))
ggplot(prices) +
stat_ecdf(aes(x=.price)) +
geom_hline(y=0.5)
source("~/.active-rstudio-document", echo=TRUE)
ggplot(prices) +
stat_ecdf(aes(x=.price)) +
geom_hline(aes(yintercept = 0.5))
quantile(ecdf(prices),.5)
quantile(ecdf(c(5,50,5,50,25,1,2,50,25,0.1,25,25,25,2,25,10,25,25,25,10,25,5,1,0.2,25,1,10,5,25,3,0.5,2,1,5,10,10,15,50,200,10,0.1,2,0.2,5,5,5,5,2,25,10,20,0.1,15,15,25,5,25,25,10,15,15,40,45,55,50,100,150,200,50,100,150,200,50,100,150,200,50,100,150,200,0.2,0.5,5,10,0.5,1,0.5)),.5)
ggplot(prices) +
stat_ecdf(aes(x=.price)) +
geom_hline(aes(yintercept = 0.5)) +
geom_vline(aes(xintercept = 15))
ggplot(prices) +
stat_ecdf(aes(x=.price)) +
geom_hline(aes(yintercept = 0.5)) +
geom_vline(aes(xintercept = 20))
ggplot(prices) +
stat_ecdf(aes(x=.price))
quantile(ecdf(c(5,50,5,50,25,1,2,50,25,0.1,25,25,25,2,25,10,25,25,25,10,25,5,1,0.2,25,1,10,5,25,3,0.5,2,1,5,10,10,15,50,200,10,0.1,2,0.2,5,5,5,5,2,25,10,20,0.1,15,15,25,5,25,25,10,15,15,40,45,55,50,100,150,200,50,100,150,200,50,100,150,200,50,100,150,200,0.2,0.5,5,10,0.5,1,0.5)),
.75)
quantile(ecdf(c(5,50,5,50,25,1,2,50,25,0.1,25,25,25,2,25,10,25,25,25,10,25,5,1,0.2,25,1,10,5,25,3,0.5,2,1,5,10,10,15,50,200,10,0.1,2,0.2,5,5,5,5,2,25,10,20,0.1,15,15,25,5,25,25,10,15,15,40,45,55,50,100,150,200,50,100,150,200,50,100,150,200,50,100,150,200,0.2,0.5,5,10,0.5,1,0.5)),
.60)
# Establish Environment
library(tidyverse)
library(ggthemes)
library(ggh4x)
library(cowplot)
# Add Nice Titles to Graphs
draw_label_theme <- function(label, theme = NULL, element = "text", ...) {
if (is.null(theme)) {
theme <- ggplot2::theme_get()
}
if (!element %in% names(theme)) {
stop("Element must be a valid ggplot theme element name")
}
elements <- ggplot2::calc_element(element, theme)
cowplot::draw_label(label,
fontfamily = elements$family,
fontface = elements$face,
colour = elements$color,
size = elements$size,
...
)
}
# Import Data
cavity_area <- read.csv("~/OneDrive - Johns Hopkins/GAG Strucutre/RemodelingSim/AllCavities.txt",colClasses = c("numeric","numeric","numeric","numeric","character","character","character","numeric"))
d25n_cavity_area <- read.csv("~/OneDrive - Johns Hopkins/GAG Strucutre/RemodelingSim/Re_ Experimental Cavity Area/d25n_scaled_detail.txt",colClasses = c("character","numeric","numeric","numeric","numeric","numeric","numeric"))
hGag_cavity_area <- read.csv("~/OneDrive - Johns Hopkins/GAG Strucutre/RemodelingSim/Re_ Experimental Cavity Area/hGag_scaled_detail.txt",colClasses = c("character","numeric","numeric","numeric","numeric","numeric","numeric"))
# Remove 562kBT Hexamers, as they consist of multiple islands that don't closely model actual hexamer assembly
cavity_area <- filter(cavity_area,HexamerStrength != 562)
# Convert Binding Rate and Hexamer Strength to Factors for visualization purposes
cavity_area <- cavity_area %>% mutate_at(vars(BindingRate),funs(factor(., levels=unique(.))))
cavity_area <- cavity_area %>% mutate_at(vars(HexamerStrength),funs(factor(., levels=unique(.))))
# Filter by Hexamer Strength, Binding Rate, Trace ID, and Timepoint, then removes the open border of the sphere
cavity_area <- cavity_area %>% group_by(HexamerStrength,BindingRate,TraceID,Timepoint) %>% filter(CavityAreaHexamers != max(CavityAreaHexamers))
# Remove the open border for experimental datasets
d25n_cavity_area <- d25n_cavity_area %>% group_by(VLPNumber) %>% filter(HexamerCavityArea != max(HexamerCavityArea))
hGag_cavity_area <- hGag_cavity_area %>% group_by(VLPNumber) %>% filter(HexamerCavityArea != max(HexamerCavityArea))
# Combine Experimental Datasets into a Single Data Frame and Restructure to Merge with Simulation Data
d25n_cavity_area <- d25n_cavity_area %>% mutate(Condition = "d25n")
hGag_cavity_area <- hGag_cavity_area %>% mutate(Condition = "hGag")
experimental_cavity_area <- bind_rows(d25n_cavity_area,hGag_cavity_area)
experimental_cavity_area <- rename(experimental_cavity_area,c(SurfaceAreaCADomain = 'SurfaceArea', Coverage = 'PercentCoverage', CavityAreaAngstroms = 'CavityArea', CavityAreaHexamers = 'HexamerCavityArea'))
experimental_cavity_area <- experimental_cavity_area %>% select(-c(Hexamers,CavityPerimeter))
experimental_cavity_area <- experimental_cavity_area %>% relocate(VLPNumber,.after = Condition)
# Filter for cavities with an area that is at least equal to the area of half of a hexamer, as the experimental data only has sufficient resolution to view hexamers with 3 or more subunits.
cavity_area <- cavity_area %>% filter(CavityAreaHexamers >= 0.5)
experimental_cavity_area <- experimental_cavity_area %>% filter(CavityAreaHexamers >= 0.5)
#Bin data by Timepoints
finalTimes <- cavity_area %>% group_by(HexamerStrength,BindingRate,TraceID) %>% summarize(maxTimepoint = max(Timepoint))
timepointed_cavities <- cavity_area %>% left_join(y=finalTimes, by=c("HexamerStrength","BindingRate","TraceID"))
timepointed_cavities <- timepointed_cavities %>% rowwise() %>% mutate(TimepointBins = cut(Timepoint,breaks=c(0,0.1*maxTimepoint,0.2*maxTimepoint,0.3*maxTimepoint,0.4*maxTimepoint,0.5*maxTimepoint,0.6*maxTimepoint,0.7*maxTimepoint,0.8*maxTimepoint,0.9*maxTimepoint,maxTimepoint),labels=c('First Tenth','Second Tenth','Third Tenth','Fourth Tenth', 'Fifth Tenth', 'Sixth Tenth', 'Seventh Tenth', 'Eighth Tenth', 'Ninth Tenth', 'Tenth Tenth')))
# Relabel Facets
relabeled_cavities <- timepointed_cavities
levels(relabeled_cavities$HexamerStrength) <- c('-11.62kBT','-7.62kBT','-9.62kBT')
levels(relabeled_cavities$BindingRate) <- c('0.015/uMS','0.15/uMS','1.5/uMS')
#Relabel Experimental Facets
relabeled_experimental_cavity_area <- experimental_cavity_area
relabeled_experimental_cavity_area$Condition <- relabeled_experimental_cavity_area$Condition %>% factor(levels = c('d25n','hGag'),labels=c('Packaging Viral RNA','Packaging Cellular RNA'))
# Visualize Cavities
LimitedCavityBox <- ggplot() +
geom_boxplot(relabeled_cavities %>% filter(HexamerStrength == '-7.62kBT'),mapping = aes(x=CavityAreaHexamers,y=BindingRate),
position="identity",width=1/length(unique(relabeled_cavities$BindingRate))) +
theme_base(base_size = 15) +
labs(title="Reaction Diffusion\nSimulation",
x="Area of Cavity (In Hexamer Areas)",
y="Binding Rate") +
scale_y_discrete(limits=rev) +
theme(plot.title = element_text(hjust = 0.5)) +
xlim(0,100) +
coord_flip()+
scale_color_colorblind()
LimitedCavityBox
SimulatedCavityBox <- ggplot() +
geom_boxplot(relabeled_cavities,mapping = aes(x=CavityAreaHexamers,y=BindingRate),
position="identity",width=0.75) +
facet_grid(.~factor(HexamerStrength,levels=c('-7.62kBT','-9.62kBT','-11.62kBT'))) +
theme_base(base_size = 15) +
labs(title="Reaction Diffusion\nSimulation",
x="Area of Cavity (In Hexamer Areas)",
y="Binding Rate") +
scale_y_discrete(limits=rev) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
theme(plot.title = element_text(hjust = 0.5)) +
xlim(0,100) +
coord_flip()+
scale_color_colorblind()
SimulatedCavityBox
ExperimentalCavityBox <- ggplot() +
geom_boxplot(relabeled_experimental_cavity_area,mapping = aes(x=CavityAreaHexamers,y=0),
position="identity",width=1/length(unique(relabeled_cavities$BindingRate))) +
ylim(-1,1) +
facet_grid(.~factor(Condition,levels=c('Packaging Cellular RNA','Packaging Viral RNA'),labels = c('Packaging\nCellular RNA','Packaging\nViral RNA'))) +
theme_base(base_size = 15) +
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank()) +
labs(title="Electron Tomography\nReconstruction",
x="Area of Cavity (In Hexamer Areas)") +
theme(plot.title = element_text(hjust = 0.5)) +
xlim(0,100) +
coord_flip()+
scale_color_colorblind()
ExperimentalCavityBox
title_gg <- ggdraw() +
draw_label_theme("Gag Lattice Cavity Areas",theme = theme_base(),element = "plot.title",x = 0.5, hjust = 0.5, vjust = 1) +
theme(plot.background = element_rect(fill="#FFFFFF", color = NA))
combinedCavityBox <- cowplot::plot_grid(SimulatedCavityBox,ExperimentalCavityBox,align="h")
combinedCavityBox
#ggsave("~/OneDrive - Johns Hopkins/GAG Strucutre/RemodelingSim/Experimental_and_Simulated_Gag_Lattice_Cavities.png",combinedCavityBox)
labeledCavityBox <- cowplot::plot_grid(title_gg,combinedCavityBox,ncol=1,rel_heights=c(0.15,1))
labeledCavityBox
#Stat Tests for Best Simulation of Experimental Data
ksTests <- setNames(data.frame(matrix(ncol=length(col),nrow=0)),col <- c("Experiment","HexamerStrength","BindingRate","D","P"))
for(i in unique(experimental_cavity_area$Condition)){
for(j in unique(relabeled_cavities$HexamerStrength)){
for(k in unique(relabeled_cavities$BindingRate)){
simulation <- relabeled_cavities %>% filter(HexamerStrength == j) %>% filter(BindingRate == k) %>% ungroup() %>% select(CavityAreaHexamers)
experiment <- experimental_cavity_area %>% filter(Condition == i) %>% ungroup() %>% select(CavityAreaHexamers)
ks <- ks.test(experiment$CavityAreaHexamers,simulation$CavityAreaHexamers)
ksTests <- rbind(ksTests,data.frame(Experiment = i, HexamerStrength = j, BindingRate = k, D = ks$statistic, p = ks$p.value))
}
}
}
bestSimulations <- ksTests %>% group_by(Experiment) %>% filter(D == min(D))
# Find Mean and SD of Cavity Size, then relate them to timepoint
meanCavities <- relabeled_cavities %>% group_by(HexamerStrength,BindingRate,TraceID,Timepoint) %>% summarize(meanCavityArea = mean(CavityAreaHexamers))
sdCavities <- relabeled_cavities %>% group_by(HexamerStrength,BindingRate,TraceID,Timepoint) %>% summarize(sdCavityArea = sd(CavityAreaHexamers))
normalizedTimepoints <- relabeled_cavities %>% group_by(HexamerStrength,BindingRate,TraceID,Timepoint,maxTimepoint,TimepointBins) %>% summarize() %>% mutate(normalizedTimepoint = Timepoint/maxTimepoint)
CavityAreaVsTime <- normalizedTimepoints %>% left_join(y= meanCavities, by=c("HexamerStrength","BindingRate","TraceID","Timepoint")) %>% left_join(y= sdCavities, by=c("HexamerStrength","BindingRate","TraceID","Timepoint"))
averagedByBinnedTime <- CavityAreaVsTime %>% group_by(HexamerStrength,BindingRate,TimepointBins) %>% summarize(binnedAverageCavityArea = mean(meanCavityArea))
sdByBinnedTime <- CavityAreaVsTime %>% group_by(HexamerStrength,BindingRate,TimepointBins) %>% summarize(binnedSdCavityArea = sd(meanCavityArea))
binnedTimeCavities <- averagedByBinnedTime %>% left_join(y = sdByBinnedTime, by=c("HexamerStrength","BindingRate","TimepointBins"))
cavityScatter <- ggplot() +
geom_point(binnedTimeCavities,mapping=aes(x=TimepointBins,y=binnedAverageCavityArea)) +
geom_errorbar(binnedTimeCavities,mapping=aes(x=TimepointBins,y=binnedAverageCavityArea,ymin=binnedAverageCavityArea-binnedSdCavityArea,ymax=binnedAverageCavityArea+binnedSdCavityArea),width = 0.2) +
facet_grid2(BindingRate~factor(HexamerStrength,levels=c('-7.62kBT','-9.62kBT','-11.62kBT')),scales = "free_y",independent = "y") +
theme_base(base_size = 1) +
labs(color="Coverage Percentage",
x="Timepoint Bin",
y="Average of Average Cavity Area (In Hexamer Areas)") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
ggtitle("Cavity Area by Hexamer Strength\nTimepoint Bin and Binding Speed")
cavityScatter
# Pull out an individual timepoint to examine cavities.
cavitiesofinterest <- relabeled_cavities %>% filter(HexamerStrength == '-7.62kBT') %>% filter(BindingRate == '1.5/uMS') %>% filter(TraceID == '1') %>% filter(Timepoint == '38850000')
# Visualize Cavities
LimitedCavityBox <- ggplot() +
geom_boxplot(relabeled_cavities %>% filter(HexamerStrength == '-7.62kBT'),mapping = aes(x=CavityAreaHexamers,y=BindingRate),
position="identity",width=1/length(unique(relabeled_cavities$BindingRate))) +
theme_base(base_size = 15) +
labs(title="Reaction Diffusion\nSimulation",
x="Area of Cavity (In Hexamer Areas)",
y="Binding Rate") +
scale_y_discrete(limits=rev) +
theme(plot.title = element_text(hjust = 0.5)) +
xlim(0,100) +
coord_flip()+
scale_color_colorblind()
LimitedCavityBox
SimulatedCavityBox <- ggplot() +
geom_boxplot(relabeled_cavities,mapping = aes(x=CavityAreaHexamers,y=BindingRate),
position="identity",width=0.75) +
facet_grid(.~factor(HexamerStrength,levels=c('-7.62kBT','-9.62kBT','-11.62kBT'))) +
theme_base(base_size = 15) +
labs(title="Reaction Diffusion\nSimulation",
x="Area of Cavity (In Hexamer Areas)",
y="Binding Rate") +
scale_y_discrete(limits=rev) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
theme(plot.title = element_text(hjust = 0.5)) +
xlim(0,100) +
coord_flip()+
scale_color_colorblind()
SimulatedCavityBox
# Visualize Cavities
LimitedCavityBox <- ggplot() +
geom_boxplot(relabeled_cavities %>% filter(HexamerStrength == '-7.62kBT'),mapping = aes(x=CavityAreaHexamers,y=BindingRate),
position="identity",width=1/length(unique(relabeled_cavities$BindingRate))) +
theme_base(base_size = 15) +
labs(title="Reaction Diffusion\nSimulation",
x="Area of Cavity (In Hexamer Areas)",
y="Binding Rate") +
scale_y_discrete(limits=rev) +
theme(plot.title = element_text(hjust = 0.5)) +
xlim(0,100) +
coord_flip()+
scale_color_colorblind()
LimitedCavityBox
View(relabeled_cavities)
source("~/qbb2024-answers/week10/week10.R", echo=TRUE)
ggplot(nuclei,aes(x=gene,y = Ratio))+
geom_boxplot() +
theme_bw() +
labs(title = "Ratio of Nascent RNA and PCNA\nMean Nuclear Signal by Gene Knockdown",x="Gene",y="log2( RNA Mean Nuclear Signal/\nPCNA Mean Nuclear Signal)")
View(meanRatioByGene)
ggplot(nuclei,aes(x=gene,y = Ratio))+
geom_violin() +
theme_bw() +
labs(title = "Ratio of Nascent RNA and PCNA\nMean Nuclear Signal by Gene Knockdown",x="Gene",y="log2( RNA Mean Nuclear Signal/\nPCNA Mean Nuclear Signal)")
ggplot(nuclei,aes(x=gene,y = PCNA))+
geom_violin() +
theme_bw() +
labs(title = "PCNA Mean Nuclear Signal by Gene Knockdown",x="Gene",y="PCNA Mean Nuclear Signal")
ggplot(nuclei,aes(x=gene,y = nascentRNA))+
geom_violin() +
theme_bw() +
labs(title = "Nascent RNA Mean Nuclear Signal by Gene Knockdown",x="Gene",y="Nascent RNA Mean Nuclear Signal")
